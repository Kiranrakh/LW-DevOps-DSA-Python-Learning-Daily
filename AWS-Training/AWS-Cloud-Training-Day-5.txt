AWS Root User, IAM, User Permissions, AWS Management Console & ReadOnlyAccess ‚Äì Explained
==========================================================================================

üîê 1. AWS Root User
-------------------
- The root user is the account owner and has full access to all AWS resources and services.
- Created when you first sign up for AWS.
- Recommended to avoid using the root user for daily tasks for security reasons.
- Use it only for:
  ‚Ä¢ Changing account settings
  ‚Ä¢ Managing billing
  ‚Ä¢ Creating the first IAM user

üë§ 2. IAM (Identity and Access Management)
-----------------------------------------
- IAM is a web service that helps you securely control access to AWS services and resources.
- With IAM, you can:
  ‚Ä¢ Create users
  ‚Ä¢ Create groups
  ‚Ä¢ Define roles
  ‚Ä¢ Attach policies (permissions)

üë• 3. IAM Users
---------------
- IAM users are identities created under your AWS account.
- Each user can:
  ‚Ä¢ Log in using a username and password
  ‚Ä¢ Be assigned access keys for programmatic access (CLI/SDK)
  ‚Ä¢ Have specific permissions and policies

üõ°Ô∏è 4. IAM Policies (Permissions)
---------------------------------
- Policies define what actions are allowed or denied.
- You can attach policies to:
  ‚Ä¢ Users
  ‚Ä¢ Groups
  ‚Ä¢ Roles
- Example: AmazonS3ReadOnlyAccess allows read-only access to S3.

üñ•Ô∏è 5. AWS Management Console
-----------------------------
- A web-based interface to access and manage AWS services.
- IAM users can log in via the Console login link.
- Based on permissions, users will see only what they're allowed to access.

üëÄ 6. ReadOnlyAccess Policy
---------------------------
- AWS provides a managed policy called ReadOnlyAccess.
- It grants read-only permissions to all AWS services.
- Useful for:
  ‚Ä¢ Audit or monitoring users
  ‚Ä¢ Security teams
  ‚Ä¢ Developers who just need to observe resources

‚úÖ Best Practices
----------------
- Enable MFA (Multi-Factor Authentication) for root and IAM users.
- Never share the root account credentials.
- Grant least privilege access ‚Äì only give users the permissions they need.
- Use Groups to manage permissions efficiently.
- Regularly review and audit IAM permissions.
