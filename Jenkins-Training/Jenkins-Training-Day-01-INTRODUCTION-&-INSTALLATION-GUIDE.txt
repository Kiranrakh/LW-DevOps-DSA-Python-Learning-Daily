==============================
JENKINS: INTRODUCTION & INSTALLATION GUIDE
==============================

1. WHAT IS JENKINS?
------------------------------
Jenkins is an open-source automation server used to automate parts of the software development process,
such as building, testing, and deploying code. It supports continuous integration (CI) and continuous delivery (CD),
allowing teams to build and deliver software more efficiently.

KEY FEATURES:
- Free and open-source
- Extensible with plugins
- Supports distributed builds
- Integration with version control systems (Git, SVN, etc.)
- Easy setup via web UI

--------------------------------
2. SYSTEM REQUIREMENTS
--------------------------------
- Java (JDK ==============================
CONTINUOUS INTEGRATION (CI) | TIME TO MARKET
==============================

1. WHAT IS CONTINUOUS INTEGRATION (CI)?
---------------------------------------
Continuous Integration is a software development practice where developers regularly merge
their code changes into a shared repository, typically several times a day. Each integration
is automatically verified by an automated build and test process.

KEY BENEFITS:
- Detects errors quickly and early
- Reduces integration problems
- Encourages frequent commits
- Enables faster feedback and testing

HOW CI WORKS:
- Developers push code to version control (e.g., Git)
- CI server (e.g., Jenkins) detects changes
- Automatically builds the code
- Runs unit and integration tests
- Notifies the team of success/failure

---------------------------------------
2. TIME TO MARKET
---------------------------------------
"Time to Market" (TTM) refers to the time it takes to develop a product and make it available
for sale or use. Reducing TTM gives businesses a competitive edge and helps in responding to
market changes quickly.

CI'S IMPACT ON TIME TO MARKET:
- Automates repetitive tasks (builds, tests, deployments)
- Reduces manual errors and rework
- Enables rapid delivery cycles
- Improves code quality through early testing
- Facilitates continuous delivery and deployment

---------------------------------------
3. TOOLS COMMONLY USED FOR CI
---------------------------------------
- Jenkins
- GitLab CI/CD
- CircleCI
- Travis CI
- GitHub Actions

---------------------------------------
4. BEST PRACTICES
---------------------------------------
- Commit code frequently
- Write automated tests
- Keep builds fast
- Use version control properly
- Monitor build results and act quickly

==============================
CONCLUSION
==============================
CI significantly reduces the Time to Market by streamlining and automating the integration,
testing, and deployment process, allowing teams to release faster and with higher confidence.

==============================
END OF DOCUMENT
==============================
8 or later recommended)
- Minimum 256MB RAM (2GB+ recommended)
- Minimum 1GB storage

==============================
INSTALLING JENKINS ON UBUNTU
==============================

STEP 1: INSTALL JAVA
------------------------------
sudo apt update
sudo apt install openjdk-11-jdk -y

Verify installation:
java -version

STEP 2: ADD JENKINS REPOSITORY
------------------------------
wget -q -O - https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo apt-key add -
sudo sh -c 'echo deb https://pkg.jenkins.io/debian-stable binary/ > /etc/apt/sources.list.d/jenkins.list'

STEP 3: INSTALL JENKINS
------------------------------
sudo apt update
sudo apt install jenkins -y

STEP 4: START & ENABLE JENKINS
------------------------------
sudo systemctl start jenkins
sudo systemctl enable jenkins

STEP 5: ACCESS JENKINS
------------------------------
Open your browser and visit: http://<your-server-ip>:8080

Get the initial admin password:
sudo cat /var/lib/jenkins/secrets/initialAdminPassword

Paste this in the setup wizard and proceed with plugin installation.

==============================
INSTALLING JENKINS ON WINDOWS
==============================

STEP 1: DOWNLOAD JENKINS
------------------------------
Go to: https://www.jenkins.io/download/
Choose the Windows installer.

STEP 2: RUN INSTALLER
------------------------------
- Follow the wizard to install Jenkins.
- Jenkins will run as a Windows service.

STEP 3: ACCESS JENKINS
------------------------------
After installation, Jenkins runs on: http://localhost:8080

Check the initial password from:
C:\Program Files (x86)\Jenkins\secrets\initialAdminPassword

Enter it in the browser and follow the setup wizard.

==============================
POST-INSTALLATION CHECKS
==============================
- Install recommended plugins
- Create an admin user
- Configure system settings
- Connect to GitHub or GitLab
- Set up credentials for secure access

==============================
TIPS:
==============================
- Use plugins like Git, Pipeline, and Blue Ocean
- Regularly back up Jenkins home directory
- Monitor disk and memory usage on Jenkins nodes


